/**
 * inputComponentType:
 *   - background: string;
 *   - foreground: string;
 *   - custom: string;
 * 
 * background: 背景图，按照index的顺序渲染，position为0,0位置开始渲染，opacity为1，不旋转，不缩放
 * custom：定制组件 src 按照index的顺序渲染，position为0,0位置开始渲染，opacity为1，不旋转，不缩放
 *      其它属性都是为传入的效果图片使用，如transform、warp、filters等
 * foreground: 前景图，按照index的顺序渲染，属性作用顺序：透明度、缩放、旋转、位置
 * 
 * 注意：
 * components 的 图片大小建议和 当前Preview 的大小一致，否则可能出现不可预期的效果，当然这不是绝对的，视具体情况而定
 *      foreground 的坐标在画布中心为 0,0
 * 
 * 关于获取数据：
 * 使用photoshop智能对象图层操作得到，根目录有 extract-smart-layer.py 文件，运行该文件，会在当前目录生成一个 json 文件，读取psd文件的智能对象图层信息，
 * 注意：在操作智能对象图层时 如果使用 变形（warp）操作就不能对图层进行斜切、扭曲等操作，否则会导致数据获取不准确。
 *       只可以对图层进行旋转、缩放（包括非等比例）、位置、变形操作。；；；
 *       由于变形后脚本无法得到正确的旋转、缩放信息，可以将旋转缩放信息写在图层名中脚本将会自动获取到。
 *              格式： 图层名@旋转角度&缩放比例x*缩放比例y      示例： 图层名@30&50*75    代表图层旋转30度，缩放0.5倍x 0.75倍y；
 *              如果是等比例缩放，则只写缩放比例即可图层名@30&50    代表图层旋转30度，缩放0.5倍；
 *      如果使用 透视变换（transform）操作，即斜切、扭曲等操作，不可以进行变形操作，否则会导致数据获取不准确。即只可以对图层进行旋转、缩放、位置、透视变换操作。
 */
const input = {
    preview: [
        {
            name: 'Preview1',
            width: 1000,
            height: 1000,
            order: 1,
            components: [
                {
                    name: 'Background', // 该部件的名称，唯一标识，必要的
                    type: 'background', // 该部件类型，目前支持 background、foreground、custom
                    src: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg', // 该部件的资源地址, 图片，必要的
                    index: 0, // 该部件的顺序，默认按照添加的顺序, 数字越小，越靠前，将影响渲染的顺序
                },
                {
                    name: 'Foreground', // 该部件的名称，唯一标识，必要的
                    type: 'foreground', // 该部件类型，目前支持 background、foreground、custom
                    src: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg', // 该部件的资源地址, 图片，必要的
                    index: 1, // 该部件的顺序，默认按照添加的顺序, 数字越小，越靠前，将影响渲染的顺序

                    position: {
                        x: 0,
                        y: 0
                    }, // 该部件的位置，以中心为原点，像素

                    opacity: 1, // 该部件的透明度，0-1之间，默认1
                    rotate: 0, // 该部件的旋转角度，默认0
                    scaleX: 1, // 该部件的缩放比例，默认1
                    scaleY: 1, // 该部件的缩放比例，默认1
                },
                {
                    name: 'Component1', // 该部件的名称，唯一标识，必要的
                    type: 'custom', // 该部件类型，目前支持 background、foreground、custom
                    src: '................', // 该部件的资源地址, 图片，必要的
                    index: 1, // 该部件的顺序，默认按照添加的顺序, 数字越小，越靠前，将影响渲染的顺序
                    // 部件渲染顺序 background 为最底层；foreground 为最上层，custom 部件在其下层
                    // index 只在同类型中有排序

                    position: {
                        x: 0,
                        y: 0
                    }, // 该部件的位置，以左上角为原点，像素
                    opacity: 1, // 该部件的透明度，0-1之间，默认1
                    rotate: 0, // 该部件的旋转角度，默认0
                    scaleX: 1, // 该部件的缩放比例，默认1
                    scaleY: 1, // 该部件的缩放比例，默认1

                    // 以下属性仅对 custom 类型有效；transform 与 warp 是互斥的，只能选择一个，两个都有时，以 warp 为准
                    // 在transform 起效时position、rotate、scaleX、scaleY 无效
                    transform: {
                        srcPoints: [0, 0, 1000, 0, 1000, 1000, 0, 1000] || null, // 不传递将使用输入图片的四个顶点
                        dstPoints: [0, 0, 1000, 0, 1000, 1000, 0, 1000],
                    }, // 透视变换， 分别代表四个点的坐标：左上、右上、右下、左下

                    // 数据来源psd智能对象图层，变形数据
                    warp: [
                        [499.11571750173, 380.5379219387334],
                        [543.0851923489723, 162.67518184235556],
                        [632.2419454508357, 83.96495792589839],
                        [800.1157511136524, 402.5955168965383],
                        [155.62628162637517, 451.9865829356127],
                        [398.9992872662687, 383.29920803802423],
                        [666.5122372183898, 329.2379780742367],
                        [1195.696793870732, 396.7090743329062],
                        [3.8906570406589935, 669.6329979067228],
                        [287.0087408436746, 650.6235408543828],
                        [-1251.9868475888175, -25.126624410829834],
                        [775.3567221800045, 677.2963973321288],
                        [0.0, 1000.0],
                        [309.3690111027139, 986.9531926114643],
                        [-291.90622255810285, 478.1277044585639],
                        [819.0470113527492, 1189.3441225895133]
                    ],
                    filters: {
                        globalCompositeOperation: 'multiply', // 合成模式，默认 multiply；示例：如果你需要显示没有任何效果的图片可以设置destination-over
                    }, // 该部件的滤镜，暂时只支持 globalCompositeOperation ； 代表输入图片与 src 图片的合成模式，默认 multiply
                },
            ]
        }
    ]
}